version: '3'

services:
  zookeeper:
    image: zookeeper:3.5
    container_name: ugc_zookeeper
    hostname: zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - ./data/zookeeper/ch_zk-data:/var/lib/zookeeper/data \
      - ./data/zookeeper/ch_zk-txn-logs:/var/lib/zookeeper/log \

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: ugc_kafka
    restart: always
    ports:
      - "9093:9093"
    expose:
      - "9093"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="kafka_capstone_event_bus:1:1"
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka:/bitnami/kafka

  clickhouse-zookeeper:
    image: zookeeper:3.5
    container_name: clickhouse-zookeeper
    hostname: clickhouse-zookeeper
    restart: always

  clickhouse-node1:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    restart: always
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./ch_conf/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    restart: always
    volumes:
      - ./ch_conf/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    restart: always
    ports:
      - "8124:8123"
      - "9001:9000"
    volumes:
      - ./ch_conf/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    restart: always
    volumes:
      - ./ch_conf/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node5:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node5
    hostname: clickhouse-node5
    restart: always
    ports:
      - "8125:8123"
      - "9002:9000"
    volumes:
      - ./ch_conf/node5:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node6:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node6
    hostname: clickhouse-node6
    restart: always
    volumes:
      - ./ch_conf/node6:/etc/clickhouse-server
    depends_on:
      - zookeeper

#   db:
#     container_name: auth_db
#     image: postgres:14.3
#     environment:
#       POSTGRES_DB: $PG_DB
#       POSTGRES_USER: $PG_USER
#       POSTGRES_PASSWORD: $PG_PASSWORD
#     volumes:
#       - ./auth/db/init.sql:/docker-entrypoint-initdb.d/init.sql
#       - db_data:/var/lib/postgresql/data
#     expose:
#       - 5432
#     env_file:
#       - .env
#     restart: always

#   auth:
#     container_name: auth
#     build:
#       context: .
#       args:
#         PROJECT_ENV: production
#     env_file:
#       - .env
#     entrypoint: ["sh", "src/run.sh"]
#     depends_on:
#       - db
#       - redis
#     expose:
#       - 5000
#     restart: always

#   redis:
#     container_name: auth_redis
#     image: redis:7.0.4-alpine
#     expose:
#       - 6379
#     restart: always
#     volumes:
#       - cache:/data

#   nginx:
#       container_name: auth_nginx
#       image: nginx:1.23
#       volumes:
#         - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#         - ./nginx/configs:/etc/nginx/conf.d:ro
#       depends_on:
#         - auth
#       ports:
#         - "10080:80"
#         - "10443:443"
#       restart: always

#   jaeger:
#     container_name: auth_jaeger
#     image: jaegertracing/all-in-one:latest
#     depends_on:
#       - nginx
#     ports:
#       - "6831:6831/udp"
#       - "16686:16686"



# volumes:
#   db_data:
#   cache:
