"""partition_db

Revision ID: bfdf71293bfd
Revises: 0d26c28bc852
Create Date: 2022-11-10 16:00:30.853414

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bfdf71293bfd'
down_revision = '0d26c28bc852'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'user_info_asia',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('create_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('full_name', sa.String(), nullable=False),
        sa.Column('country', sa.String(), nullable=False),
        sa.Column('gender', sa.String(), nullable=False),
        sa.Column('birthday', sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['auth.users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        sa.UniqueConstraint('id', 'country'),
    )
    op.create_table(
        'user_info_cis',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('create_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('full_name', sa.String(), nullable=False),
        sa.Column('country', sa.String(), nullable=False),
        sa.Column('gender', sa.String(), nullable=False),
        sa.Column('birthday', sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['auth.users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        sa.UniqueConstraint('id', 'country'),
    )
    op.create_table(
        'user_info_eu',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('create_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('full_name', sa.String(), nullable=False),
        sa.Column('country', sa.String(), nullable=False),
        sa.Column('gender', sa.String(), nullable=False),
        sa.Column('birthday', sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['auth.users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        sa.UniqueConstraint('id', 'country'),
    )
    op.create_table(
        'sessions_2021',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('create_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('device_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('auth_date', sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(
            ['device_id'],
            ['auth.allowed_device.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['auth.users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        schema='auth',
    )
    op.create_table(
        'sessions_2022',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('create_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('device_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('auth_date', sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(
            ['device_id'],
            ['auth.allowed_device.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['auth.users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        schema='auth',
    )
    op.create_table(
        'sessions_2023',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('create_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('device_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('auth_date', sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(
            ['device_id'],
            ['auth.allowed_device.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['auth.users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        schema='auth',
    )
    op.create_table(
        'sessions_2024',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('create_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('device_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('auth_date', sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(
            ['device_id'],
            ['auth.allowed_device.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['auth.users.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id'),
        schema='auth',
    )
    op.drop_constraint('allowed_device_user_id_fkey', 'allowed_device', type_='foreignkey')
    op.create_foreign_key(
        None, 'allowed_device', 'users', ['user_id'], ['id'], source_schema='auth', referent_schema='auth'
    )
    op.drop_constraint('roles_permissions_role_id_fkey', 'roles_permissions', type_='foreignkey')
    op.drop_constraint('roles_permissions_perm_id_fkey', 'roles_permissions', type_='foreignkey')
    op.create_foreign_key(
        None, 'roles_permissions', 'permissions', ['perm_id'], ['id'], source_schema='auth', referent_schema='auth'
    )
    op.create_foreign_key(
        None, 'roles_permissions', 'roles', ['role_id'], ['id'], source_schema='auth', referent_schema='auth'
    )
    op.drop_constraint('sessions_user_id_fkey', 'sessions', type_='foreignkey')
    op.drop_constraint('sessions_device_id_fkey', 'sessions', type_='foreignkey')
    op.create_foreign_key(None, 'sessions', 'users', ['user_id'], ['id'], source_schema='auth', referent_schema='auth')
    op.create_foreign_key(
        None, 'sessions', 'allowed_device', ['device_id'], ['id'], source_schema='auth', referent_schema='auth'
    )
    op.drop_constraint('social_account_user_id_fkey', 'social_account', type_='foreignkey')
    op.create_foreign_key(
        None, 'social_account', 'users', ['user_id'], ['id'], source_schema='auth', referent_schema='auth'
    )
    op.drop_constraint('user_info_user_id_fkey', 'user_info', type_='foreignkey')
    op.create_foreign_key(None, 'user_info', 'users', ['user_id'], ['id'], source_schema='auth', referent_schema='auth')
    op.drop_constraint('users_roles_role_id_fkey', 'users_roles', type_='foreignkey')
    op.drop_constraint('users_roles_user_id_fkey', 'users_roles', type_='foreignkey')
    op.create_foreign_key(
        None, 'users_roles', 'roles', ['role_id'], ['id'], source_schema='auth', referent_schema='auth'
    )
    op.create_foreign_key(
        None, 'users_roles', 'users', ['user_id'], ['id'], source_schema='auth', referent_schema='auth'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users_roles', schema='auth', type_='foreignkey')
    op.drop_constraint(None, 'users_roles', schema='auth', type_='foreignkey')
    op.create_foreign_key('users_roles_user_id_fkey', 'users_roles', 'users', ['user_id'], ['id'])
    op.create_foreign_key('users_roles_role_id_fkey', 'users_roles', 'roles', ['role_id'], ['id'])
    op.drop_constraint(None, 'user_info', schema='auth', type_='foreignkey')
    op.create_foreign_key('user_info_user_id_fkey', 'user_info', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'social_account', schema='auth', type_='foreignkey')
    op.create_foreign_key('social_account_user_id_fkey', 'social_account', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'sessions', schema='auth', type_='foreignkey')
    op.drop_constraint(None, 'sessions', schema='auth', type_='foreignkey')
    op.create_foreign_key('sessions_device_id_fkey', 'sessions', 'allowed_device', ['device_id'], ['id'])
    op.create_foreign_key('sessions_user_id_fkey', 'sessions', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'roles_permissions', schema='auth', type_='foreignkey')
    op.drop_constraint(None, 'roles_permissions', schema='auth', type_='foreignkey')
    op.create_foreign_key('roles_permissions_perm_id_fkey', 'roles_permissions', 'permissions', ['perm_id'], ['id'])
    op.create_foreign_key('roles_permissions_role_id_fkey', 'roles_permissions', 'roles', ['role_id'], ['id'])
    op.drop_constraint(None, 'allowed_device', schema='auth', type_='foreignkey')
    op.create_foreign_key('allowed_device_user_id_fkey', 'allowed_device', 'users', ['user_id'], ['id'])
    op.drop_table('sessions_2024', schema='auth')
    op.drop_table('sessions_2023', schema='auth')
    op.drop_table('sessions_2022', schema='auth')
    op.drop_table('sessions_2021', schema='auth')
    op.drop_table('user_info_eu')
    op.drop_table('user_info_cis')
    op.drop_table('user_info_asia')
    # ### end Alembic commands ###
